@model IEnumerable<Vidly.Models.Customer>
@{
	ViewBag.Title = "Customers";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@if (!Model.Any())
{
	<p>We don't have any customers yet.</p>
}
else
{
<table id="customers" class="table table-bordered table-hover">
	<thead>
		<tr>
			<th>Customer</th>
			<th>Membership Type</th>
			<th>Delete</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var customer in Model)
		{
		<tr>
			<td>
				@Html.ActionLink(customer.Name, "Edit", "Customers", new
				{
					id = customer.Id
				}, null)
			</td>
			<td>@customer.MembershipType.Name</td>
			<td>
				<button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button>
			</td>
		</tr>
		}
	</tbody>
</table>
}

@section scripts
{
	<script>
		$(document).ready(function () {
			// First, get the customers table,
			// Then, .on method is used to handle the click on the .js-delete button
			$("#customers").on("click", ".js-delete", function () {
				var button = $(this); // in this function, 'this' reffers to the button.

				bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
					if (result) {
						// Using ajax, the js sends a DELETE request with the id,
						// so the customer is deleted from the DB.
						// The request can be found in Chrome Developer tools, in Network tab, filter by XHR.
						$.ajax({
							url: "/api/customers/" + button.attr("data-customer-id"),
							method: "DELETE",
							success: function () {
								// remove the clicked button's parent from the display,
								// which is the table row we deleted.
								button.parents("tr").remove();
							}
						});
					}
				});
			});
		});
	</script>
}